{
  "hash": "2482951512e5943b98afa7658950cd9e",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Actions and Targets\"\nauthor: \"Ian\"\ndate: \"19-2-2025\"\ncategories: [Actions and Targets]\n---\n\n---\n\ntitle: This will be a basic demonstration of different visuals to represent data. THe dataset chosen is going to be electoral results from the 2002 German federal election. Each of the main parties' results were taken and analyzed at a Bundesland (State) level and then visualized both independently and in common spaces. The following data are from 2002 wherein the SPD (Social Democratic Party of Germany) and the Greens won the election as a coalition and remained in power. An important thing to note is that elections in the Bundestag work differently than the US. The system over there has a plurality of political parties, with no one party maintaining dominance over others. This often results in different parties needing to form coalitions with each other in order to win elections and rule the country with the largest party of the coalition usually being the one whose leader becomes Kanzler or Kanzlerin.\njupyter: python3\n---\n\n\n\n\n# Let's begin with this foray into data visualization. Sections below will have German as comments that will split each section that describe the data in them. The Bundestag Sitzplaetze section contains the number of Bundestag seats each party had out of the total seats that it had that year. Sections beneath will report the results for each party by Bundesland and by percent of the votes of that Bundesland that they won.\n\n# One last important detail before getting to code and visualizations is the clarification of potential action-target pairs present in this post. The desired action here is for viewers to analyze and consume trends and outliers present in the 2002 german election. Another desired action is for viewers to identify and compare attributes of the election like the location of party strongholds and distributions of where certain parties were most successful.\n\n::: {#a942b8aa .cell execution_count=1}\n``` {.python .cell-code}\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport statistics\n```\n:::\n\n\n# 2002 Bundestag sitzplaetze resultaten\n\n::: {#4fcee52f .cell execution_count=2}\n``` {.python .cell-code}\nSPD02 = 251/603;\nCDU02 = 190/603;\nCSU02 = 58/603;\nBund02 = 55/603;\nFDP02 = 47/603;\nPDS02 = 2/603;\nUnion02=CDU02+CSU02;\n```\n:::\n\n\n# Resultaten Fuer SPD 2002 bei Bundesland in prozent\n\n::: {#2458336d .cell execution_count=3}\n``` {.python .cell-code}\nSPD02MV = 41.7;\nSPD02SH = 42.9;\nSPD02HM = 42;\nSPD02BR = 48.6;\nSPD02BL = 36.6;\nSPD02BB = 46.4;\nSPD02SA = 43.2;\nSPD02NS = 47.8;\nSPD02SN = 33.3;\nSPD02TH = 39.9;\nSPD02HN = 39.7;\nSPD02NW = 43;\nSPD02BY = 26.1;\nSPD02BW = 33.5;\nSPD02RP = 38.2;\nSPD02SL = 46;\nSPD02DE = np.array([SPD02MV,SPD02SH,SPD02HM,SPD02BR,SPD02BL,SPD02BB,SPD02SA,SPD02NS,SPD02SN,SPD02TH,SPD02HN,SPD02NW,SPD02BY,SPD02BW,SPD02RP,SPD02SL]);\n```\n:::\n\n\n# Resultaten fuer Union (UN) 2002 bei Bundesland in prozent\n\n::: {#25ddc8a5 .cell execution_count=4}\n``` {.python .cell-code}\nUN02MV = 30.3;\nUN02SH = 36;\nUN02HM = 42;\nUN02BR = 24.6;\nUN02BL = 25.9;\nUN02BB = 22.3;\nUN02SA = 29;\nUN02NS = 34.5;\nUN02SN = 33.6;\nUN02TH = 29.4;\nUN02HN = 37.1;\nUN02NW = 35.1;\nUN02BY = 58.6;\nUN02BW = 42.8;\nUN02RP = 40.3;\nUN02SL = 35;\nUN02DE = np.array([UN02MV,UN02SH,UN02HM,UN02BR,UN02BL,UN02BB,UN02SA,UN02NS,UN02SN,UN02TH,UN02HN,UN02NW,UN02BY,UN02BW,UN02RP,UN02SL]);\n```\n:::\n\n\n# Resultaten fuer Buendnis/Die Gruene 2002 bei Bundesland in prozent\n\n::: {#2560c2d7 .cell execution_count=5}\n``` {.python .cell-code}\nBG02MV = 3.5;\nBG02SH = 9.4;\nBG02HM = 16.2;\nBG02BR = 15;\nBG02BL = 14.6;\nBG02BB = 4.5;\nBG02SA = 3.4;\nBG02NS = 7.3;\nBG02SN = 4.6;\nBG02TH = 4.3;\nBG02HN = 10.7;\nBG02NW = 8.9;\nBG02BY = 7.6;\nBG02BW = 11.4;\nBG02RP = 7.9;\nBG02SL = 7.6;\nBG02DE = np.array([BG02MV,BG02SH,BG02HM,BG02BR,BG02BL,BG02BB,BG02SA,BG02NS,BG02SN,BG02TH,BG02HN,BG02NW,BG02BY,BG02BW,BG02RP,BG02SL]);\n```\n:::\n\n\n# Resultaten fuer FDP 2002 bei Bundesland in Prozent\n\n::: {#9b87c1a5 .cell execution_count=6}\n``` {.python .cell-code}\nFDP02MV = 5.4;\nFDP02SH = 8;\nFDP02HM = 6.8;\nFDP02BR = 6.7;\nFDP02BL = 6.6;\nFDP02BB = 5.8;\nFDP02SA = 7.6;\nFDP02NS = 7.1;\nFDP02SN = 7.3;\nFDP02TH = 5.9;\nFDP02HN = 8.2;\nFDP02NW = 9.4;\nFDP02BY = 4.5;\nFDP02BW = 7.8;\nFDP02RP = 9.3;\nFDP02SL = 6.4;\nFDP02DE = np.array([FDP02MV,FDP02SH,FDP02HM,FDP02BR,FDP02BL,FDP02BB,FDP02SA,FDP02NS,FDP02SN,FDP02TH,FDP02HN,FDP02NW,FDP02BY,FDP02BW,FDP02RP,FDP02SL]);\n```\n:::\n\n\n# Resultaten fuer PDS 2002 bei Bundesland in Prozent\n\n::: {#4ca1f826 .cell execution_count=7}\n``` {.python .cell-code}\nPDS02MV = 16.3;\nPDS02SH = 1.3;\nPDS02HM = 2.1;\nPDS02BR = 2.2;\nPDS02BL = 11.4;\nPDS02BB = 17.2;\nPDS02SA = 14.4;\nPDS02NS = 1;\nPDS02SN = 16.2;\nPDS02TH = 17;\nPDS02HN = 1.3;\nPDS02NW = 1.2;\nPDS02BY = 0.7;\nPDS02BW = 1;\nPDS02RP = 1;\nPDS02SL = 1.4;\nPDS02DE = np.array([PDS02MV,PDS02SH,PDS02HM,PDS02BR,PDS02BL,PDS02BB,PDS02SA,PDS02NS,PDS02SN,PDS02TH,PDS02HN,PDS02NW,PDS02BY,PDS02BW,PDS02RP,PDS02SL]);\n```\n:::\n\n\n# Bundesland results by Bundesland comparing the votes percentages each party got in that Bundesland.\n\n::: {#e973c1e2 .cell execution_count=8}\n``` {.python .cell-code}\nMV02 = np.array([SPD02MV, UN02MV,BG02MV,FDP02MV,PDS02MV]);\nSH02 = np.array([SPD02SH, UN02SH,BG02SH,FDP02SH,PDS02SH]);\nHM02 = np.array([SPD02HM, UN02HM,BG02HM,FDP02HM,PDS02HM]);\nBR02 = np.array([SPD02BR, UN02BR,BG02BR,FDP02BR,PDS02BR]);\nBL02 = np.array([SPD02BL, UN02BL,BG02BL,FDP02BL,PDS02BL]);\nBB02 = np.array([SPD02BB, UN02BB,BG02BB,FDP02BB,PDS02BB]);\nSA02 = np.array([SPD02SA, UN02SA,BG02SA,FDP02SA,PDS02SA]);\nNS02 = np.array([SPD02NS, UN02NS,BG02NS,FDP02NS,PDS02NS]);\nSN02 = np.array([SPD02SN, UN02SN,BG02SN,FDP02SN,PDS02SN]);\nTH02 = np.array([SPD02TH, UN02TH,BG02TH,FDP02TH,PDS02TH]);\nHN02 = np.array([SPD02HN, UN02HN,BG02HN,FDP02HN,PDS02HN]);\nNW02 = np.array([SPD02NW, UN02NW,BG02NW,FDP02NW,PDS02NW]);\nBY02 = np.array([SPD02BY, UN02BY,BG02BY,FDP02BY,PDS02BY]);\nBW02 = np.array([SPD02BW, UN02BW,BG02BW,FDP02BW,PDS02BW]);\nRP02 = np.array([SPD02RP, UN02RP,BG02RP,FDP02RP,PDS02RP]);\nSL02 = np.array([SPD02SL, UN02SL,BG02SL,FDP02SL,PDS02SL]);\n```\n:::\n\n\n# What follows next will be a set of visualizations for the data from above. The first bar graph beneath will include all of the parties results for each Bundesland stacked next to each other for that specific Bundesland. An important side note is that abbreviations are used in the legend. The main ones that may be confusing are the BG90 and Union parties. BG90 is short for Buendnis 90/Die Gruene, this is party are the Greens. Union on the other hand is a coalition between the CSU and CDU parties which are centre right political parties.\n\n::: {#c8f9784c .cell execution_count=9}\n``` {.python .cell-code}\nBundeslaender = np.array(['Mecklenburg-Vorpommern','Schleswig Holstein','Hamburg','Bremen','Berlin','Brandenburg','Sachsen-Anhalt','Niedersachsen','Sachsen','Thueringen','Hessen','Nordrhein-Westfalen','Bayern','Baden Wuerttemberg','Rheinland-Pfalz','Saarland']);\nLaender = np.array([1 ,3, 5, 7,9, 11, 13, 15,17, 19, 21, 23,25, 27, 29, 31]);\nplt.bar(Laender -0.1, SPD02DE, 0.4, label = 'SPD',color='red') \nplt.bar(Laender - 0.5, UN02DE, 0.4, label = 'Union',color='black') \nplt.bar(Laender - 0.9, BG02DE, 0.4, label = 'BG90',color='green') \nplt.bar(Laender + 0.3, FDP02DE, 0.4, label = 'FDP',color='#FFFF00') \nplt.bar(Laender + 0.8, PDS02DE, 0.4, label = 'PDS',color='#A2142F') \nplt.xticks(Laender,Bundeslaender,rotation=90)\nplt.ylabel(\"% of Total Votes\") \nplt.xlabel(\"Bundeslaender\") \nplt.title(\"2002 German Election Results\") \nplt.legend() \nplt.show() \n```\n\n::: {.cell-output .cell-output-display}\n![](Assignment3_files/figure-html/cell-10-output-1.png){width=585 height=612}\n:::\n:::\n\n\n# Next will be a bar graph just like above, except the parties' results are overlaid on to one another. Both of these bar graphs will be pertinent in a future post regarding marks and channels used in visualizations.\n\n::: {#f6d6c953 .cell execution_count=10}\n``` {.python .cell-code}\nBundeslaender = np.array(['Mecklenburg-Vorpommern','Schleswig Holstein','Hamburg','Bremen','Berlin','Brandenburg','Sachsen-Anhalt','Niedersachsen','Sachsen','Thueringen','Hessen','Nordrhein-Westfalen','Bayern','Baden Wuerttemberg','Rheinland-Pfalz','Saarland']);\nLaender = np.array([1 ,2, 3, 4,\n                    5, 6, 7, 8,\n                    9, 10, 11, 12,\n                    13, 14, 15, 16]);\nplt.bar(Laender, SPD02DE, label = 'SPD',color='red') \nplt.bar(Laender, UN02DE, label = 'Union',color='black') \nplt.bar(Laender, BG02DE, label = 'SPDE',color='green') \nplt.bar(Laender, FDP02DE, label = 'FDP',color='#FFFF00') \nplt.bar(Laender, PDS02DE, label = 'PDS',color='#A2142F') \nplt.xticks(Laender,Bundeslaender,rotation=90)\nplt.ylabel(\"% of Total Votes\") \nplt.xlabel(\"Bundeslaender\") \nplt.title(\"2002 German Election Results\") \nplt.legend() \nplt.show() \n```\n\n::: {.cell-output .cell-output-display}\n![](Assignment3_files/figure-html/cell-11-output-1.png){width=585 height=612}\n:::\n:::\n\n\n# Beneath will be a set of bar grpahs that present the results for individual parties in each Bundesland in Germany. The first will be the winning party, SPD.\n\n::: {#888821a1 .cell execution_count=11}\n``` {.python .cell-code}\nBundeslaender = np.array(['Mecklenburg-Vorpommern','Schleswig Holstein','Hamburg','Bremen','Berlin','Brandenburg','Sachsen-Anhalt','Niedersachsen','Sachsen','Thueringen','Hessen','Nordrhein-Westfalen','Bayern','Baden Wuerttemberg','Rheinland-Pfalz','Saarland']);\nLaender = np.array([1 ,2, 3, 4,\n                    5, 6, 7, 8,\n                    9, 10, 11, 12,\n                    13, 14, 15, 16]);\nplt.bar(Laender, SPD02DE, label = 'SPD',color='red') \nplt.xticks(Laender,Bundeslaender,rotation=90)\nplt.ylabel(\"% of Total Votes\") \nplt.xlabel(\"Bundeslaender\") \nplt.title(\"2002 SPD Election Results\") \nplt.legend() \nplt.show() \n```\n\n::: {.cell-output .cell-output-display}\n![](Assignment3_files/figure-html/cell-12-output-1.png){width=585 height=612}\n:::\n:::\n\n\n# Next will be the Union party\n\n::: {#268dda45 .cell execution_count=12}\n``` {.python .cell-code}\nBundeslaender = np.array(['Mecklenburg-Vorpommern','Schleswig Holstein','Hamburg','Bremen','Berlin','Brandenburg','Sachsen-Anhalt','Niedersachsen','Sachsen','Thueringen','Hessen','Nordrhein-Westfalen','Bayern','Baden Wuerttemberg','Rheinland-Pfalz','Saarland']);\nLaender = np.array([1 ,2, 3, 4,\n\n                    5, 6, 7, 8,\n                    9, 10, 11, 12,\n                    13, 14, 15, 16]);\nplt.bar(Laender, UN02DE, label = 'Union',color='black') \nplt.xticks(Laender,Bundeslaender,rotation=90)\nplt.ylabel(\"% of Total Votes\") \nplt.xlabel(\"Bundeslaender\") \nplt.title(\"2002 Union Election Results\") \nplt.legend() \nplt.show() \n```\n\n::: {.cell-output .cell-output-display}\n![](Assignment3_files/figure-html/cell-13-output-1.png){width=585 height=612}\n:::\n:::\n\n\n# Results for Buendnis 90/ Die Gruene\n\n::: {#a671e5f7 .cell execution_count=13}\n``` {.python .cell-code}\nBundeslaender = np.array(['Mecklenburg-Vorpommern','Schleswig Holstein','Hamburg','Bremen','Berlin','Brandenburg','Sachsen-Anhalt','Niedersachsen','Sachsen','Thueringen','Hessen','Nordrhein-Westfalen','Bayern','Baden Wuerttemberg','Rheinland-Pfalz','Saarland']);\nLaender = np.array([1 ,2, 3, 4,\n                    5, 6, 7, 8,\n                    9, 10, 11, 12,\n                    13, 14, 15, 16]);\nplt.bar(Laender, BG02DE, label = 'BG90',color='green') \nplt.xticks(Laender,Bundeslaender,rotation=90)\nplt.ylabel(\"% of Total Votes\") \nplt.xlabel(\"Bundeslaender\") \nplt.title(\"2002 BG90 Election Results\") \nplt.legend() \nplt.show() \n```\n\n::: {.cell-output .cell-output-display}\n![](Assignment3_files/figure-html/cell-14-output-1.png){width=585 height=612}\n:::\n:::\n\n\n# The bar graph beneath for the FDP in 2002 is an important lesson in choosing colors wisely when presenting data. In the form directly beneath, the yellow on top of white is glaringly bright and makes distinction of votes percentages far more difficult.\n\n::: {#e7307bb5 .cell execution_count=14}\n``` {.python .cell-code}\nBundeslaender = np.array(['Mecklenburg-Vorpommern','Schleswig Holstein','Hamburg','Bremen','Berlin','Brandenburg','Sachsen-Anhalt','Niedersachsen','Sachsen','Thueringen','Hessen','Nordrhein-Westfalen','Bayern','Baden Wuerttemberg','Rheinland-Pfalz','Saarland']);\nLaender = np.array([1 ,2, 3, 4,\n                    5, 6, 7, 8,\n                    9, 10, 11, 12,\n                    13, 14, 15, 16]);\nplt.bar(Laender, FDP02DE, label = 'FDP',color='#FFFF00') \nplt.xticks(Laender,Bundeslaender,rotation=90)\nplt.ylabel(\"% of Total Votes\") \nplt.xlabel(\"bundeslaender\") \nplt.title(\"2002 FDP Election Results\") \nplt.legend() \nplt.show() \n```\n\n::: {.cell-output .cell-output-display}\n![](Assignment3_files/figure-html/cell-15-output-1.png){width=576 height=612}\n:::\n:::\n\n\n# Instead, let's change the background to blue with an unintended consequence that it now looks like a very poorly done offbrand ikea illustration. However, with the blue background the ability to determine the percentage that the SPD earned in each state is much easier. I did try using black but very quickly realized that black made it very difficult to see where the percentages are as well.\n\n::: {#94431a98 .cell execution_count=15}\n``` {.python .cell-code}\nBundeslaender = np.array(['Mecklenburg-Vorpommern','Schleswig Holstein','Hamburg','Bremen','Berlin','Brandenburg','Sachsen-Anhalt','Niedersachsen','Sachsen','Thueringen','Hessen','Nordrhein-Westfalen','Bayern','Baden Wuerttemberg','Rheinland-Pfalz','Saarland']);\nLaender = np.array([1 ,2, 3, 4,\n                    5, 6, 7, 8,\n                    9, 10, 11, 12,\n                    13, 14, 15, 16]);\nplt.bar(Laender, FDP02DE, label = 'FDP',color='#FFFF00') \nax = plt.gca()  \n# Setting Background colour yellow \nax.set_facecolor(\"blue\")\nplt.xticks(Laender,Bundeslaender,rotation=90)\nplt.ylabel(\"% of Total Votes\") \nplt.xlabel(\"bundeslaender\") \nplt.title(\"2002 FDP Election Results\") \nplt.legend() \nplt.show() \n```\n\n::: {.cell-output .cell-output-display}\n![](Assignment3_files/figure-html/cell-16-output-1.png){width=576 height=612}\n:::\n:::\n\n\n# Beneath will be the final party of 2002 being looked at, the PDS who have since renamed to Die Linke (The Left).\n\n::: {#79c67519 .cell execution_count=16}\n``` {.python .cell-code}\nBundeslaender = np.array(['Mecklenburg-Vorpommern','Schleswig Holstein','Hamburg','Bremen','Berlin','Brandenburg','Sachsen-Anhalt','Niedersachsen','Sachsen','Thueringen','Hessen','Nordrhein-Westfalen','Bayern','Baden Wuerttemberg','Rheinland-Pfalz','Saarland']);\nLaender = np.array([1 ,2, 3, 4,\n                    5, 6, 7, 8,\n                    9, 10, 11, 12,\n                    13, 14, 15, 16]);\nplt.bar(Laender, PDS02DE, label = 'PDS',color='#A2142F') \nplt.xticks(Laender,Bundeslaender,rotation=90)\nplt.ylabel(\"% of Total Votes\") \nplt.xlabel(\"Bundeslaender\") \nplt.title(\"2002 PDS Election Results\") \nplt.legend() \nplt.show() \n```\n\n::: {.cell-output .cell-output-display}\n![](Assignment3_files/figure-html/cell-17-output-1.png){width=597 height=612}\n:::\n:::\n\n\n",
    "supporting": [
      "Assignment3_files"
    ],
    "filters": [],
    "includes": {}
  }
}